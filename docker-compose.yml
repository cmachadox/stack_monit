version: '3'

services:

  prometheus:
    image: prom/prometheus
    volumes:
      - ./prometheus/prometheus/:/etc/prometheus
      - prometheus_data:/prometheus
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
      - '--web.console.libraries=/usr/share/prometheus/console_libraries'
      - '--web.console.templates=/usr/share/prometheus/consoles'
    ports:
      - 9090:9090
    deploy:
      placement:
        constraints:
          - node.role == manager
      resources:
        limits:
          memory: 1024M
        reservations:
          memory: 512M

  node-exporter:
    image: prom/node-exporter
    volumes:
      - /proc:/host/proc:ro
      - /sys:/host/sys:ro
      - /:/rootfs:ro
    command:
      - '--path.procfs=/host/proc'
      - '--path.sysfs=/host/sys'
      - --collector.filesystem.ignored-mount-points
      - "^/(sys|proc|dev|host|etc|rootfs/var/lib/docker/containers|rootfs/var/lib/docker/overlay2|rootfs/run/docker/netns|rootfs/var/lib/docker/aufs)($$|/)"
    ports:
      - 9100:9100
    deploy:
      mode: global


  #alertmanager:
  #  image: prom/alertmanager
  # ports:
  #    - 9093:9093
  #  volumes:
  #    - ./prometheus/alertmanager/:/etc/alertmanager/
  #  command:
  #    - '--config.file=/etc/alertmanager/config.yml'
  #    - '--storage.path=/alertmanager'
  #  deploy:
  #    placement:
  #      constraints:
  #         - node.role==manager

  grafana:
    image: grafana/grafana
    hostname: grafana
    env_file:
      - ./prometheus/grafana/grafana.config
    ports:
      - 3000:3000
    volumes:
      -  grafana:/var/lib/grafana
      - ./prometheus/grafana/provisioning/:/etc/grafana/provisioning/
    depends_on:
      - prometheus

    deploy:
      replicas: 1
      placement:
        constraints:
          - node.role == manager

  #cadvisor:
  #  image: google/cadvisor
  #  hostname: cadvisor
  #  volumes:
  #    - /:/rootfs:ro
  #    - /var/run:/var/run:rw
  #    - /sys:/sys:ro
  #    - /var/lib/docker/:/var/lib/docker:ro
  #    - /var/run/docker.sock:/var/run/docker.sock:ro
  #  deploy:
  #    mode: global
  #  ports:
  #    - 8081:8080

  
#  prometheus-bot:
#    image: tienbm90/prometheus-bot:0.0.1
#    hostname: telegrambot
#    volumes:
#      - ./prometheus/telegrambot/:/etc/telegrambot/
#      - ./prometheus/telegrambot/config.yaml:/config.yaml
#    ports:
#      - 9087:9087

volumes:
  influx:
    driver: local
  grafana:
    driver: local
  prometheus_data : {}
  portainer_data : {}
